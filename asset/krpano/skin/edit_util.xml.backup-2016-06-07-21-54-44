<krpano>
	<events name="util_events" keep="true"
	        onxmlcomplete="set(events[util_events].onxmlcomplete,null); util_startup();"
	        />
	<layer name="scene_list" visible="false" type="container" keep="true" align="left" x="100" y="0" width="200" height="400" bgcapture="true" boder="true" bgborder="3 0x3C3C3C" bgcolor="0x272727" bgalpha="0.4" maskchildren="true" ondown="draglayer();">
		<layer name="top_title" url="%SWFPATH%/plugins/textfield.swf" html="选择一个目标场景" align="top" edge="top" width="140" y="5" backgroundalpha="0"
		height="50" autoheight="true"  zorder="4" enabled="false" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;" textshadow="1"/>
		<layer name="scene_list_info" type="container" bgcolor="0x000000" bgalpha="0.5" align="lefttop" width="100%" height="300" x="0" y="50" maskchildren="true">
			<layer name="scene_list_container" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" mwheel="true" 
			direction="v" x="-5" align="top" width="50%" height="100%" zorder="1" onloaded="skin_updatescroll();" 
			onscroll="if(hoverflow GT 0, div(yp,toverflow,hoverflow);Math.min(yp,1);Math.max(yp,0); copy(th,layer[scrollbar].pixelheight);sub(th,layer[scrollup].pixelheight);sub(th,layer[scrolldown].pixelheight);sub(th,layer[scrollslider].pixelheight); mul(yp,th);add(yp,layer[scrollup].pixelheight); copy(layer[scrollslider].y,yp); );" >
			</layer>
			<layer name="scrollbar" type="container" bgcolor="0x000000" bgalpha="0.25" align="righttop" x="5" y="5" width="19" height="-10">
				<layer name="scrollup"     url="dirbutton.png"    align="righttop"    x="19" rotate="-90" crop="0|0|19|19" onovercrop="0|19|19|19" ondowncrop="0|38|19|19" ondown="asyncloop(pressed, layer[scene_list_container].scrollby(0,+1));" />
				<layer name="scrolldown"   url="dirbutton.png"    align="rightbottom" x="19" rotate="+90" crop="0|0|19|19" onovercrop="0|19|19|19" ondowncrop="0|38|19|19" ondown="asyncloop(pressed, layer[scene_list_container].scrollby(0,-1));" />
				<layer name="scrollslider" url="sliderbutton.png" align="righttop"    x="0"  y="19"       crop="0|0|19|19" onovercrop="0|19|19|19" ondowncrop="0|38|19|19" ondown="if(layer[scene_list_container].hoverflow GT 0, copy(cy,y);copy(sy,mouse.stagey);dragging(); );" dragging="if(pressed, sub(dy,mouse.stagey,sy);add(ny,cy,dy);Math.max(ny,layer[scrollup].pixelheight); copy(th,layer[scrollbar].pixelheight);sub(th,layer[scrolldown].pixelheight);sub(th,layer[scrollslider].pixelheight);Math.min(ny,th); copy(y,ny); sub(ny,layer[scrollup].pixelheight);sub(th,layer[scrollslider].pixelheight);div(ny,th); copy(fh,layer[scene_list_container].hoverflow); mul(fh,-1); mul(ny,fh); layer[scene_list_container].stopscrolling(); copy(layer[scene_list_container].y,ny); delayedcall(0,dragging()); );" />
			</layer>
		</layer>
		<layer name="bottom_button" type="container"  align="top" edge="top" width="100%" height="50" y="350" zorder="4"  >
			<layer name="button_ok" url="%SWFPATH%/plugins/textfield.swf" html="确定" align="lefttop" width="40" zorder="5" backgroundcolor="0x333FFF" backgroundalpha="0.1"
					 autoheight="true" x="20" y="12" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;" 
					 onclick="savepots()"/>
			<layer name="button_no" url="%SWFPATH%/plugins/textfield.swf" html="取消" align="righttop" width="40" zorder="5" backgroundcolor="0x333FFF" backgroundalpha="0.1"
					 autoheight="true" x="20" y="12" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;" 
					 onclick="checkTarget()"/>
		</layer>
	</layer>
	<layer name="tipslogo" devices="mobile"  keep="true" url="%SWFPATH%/skin/vtourskin_dragico.png" visible="false" height="150" width="150" align="center"  onclick="set(layer[tipslogo].visible,false)"/>
	<style name="hotspot_ani_white"
	       url="../black_64x64x20.png"
	       crop="0|0|64|64"
	       framewidth="64" frameheight="64" frame="0" lastframe="19"
	       onloaded="hotspot_animate();"
	       />

	<action name="littlep">
		copy(lp_scene, xml.scene);
		copy(lp_hlookat, view.hlookat);
		copy(lp_vlookat, view.vlookat);
		copy(lp_fov, view.fov);
		copy(lp_fovmax, view.fovmax);
		copy(lp_limitview, view.limitview);
		set(view.fovmax, 170);
		set(view.limitview, lookto);
		set(view.hlookat,0);
		set(view.vlookat,180);
		set(view.fov,170);
		set(view.stereographic,"on");
		set(view.fisheye,1);
		//delayedcall(1.5, normalview());
		
	</action>

	<action name="normalview">
	if(view.fisheye == 1,
		openthumbs();
		tween(view.hlookat, 0, 3.5, easeInOutQuad);
		tween(view.vlookat, 0, 3.5, easeInOutQuad);
		tween(view.fov,     get(lp_fov), 3.5, easeInOutQuad);
		set(view.limitview,  get(lp_limitview));
		tween(view.fisheye, 0.0, 3.5, easeInOutQuad);
		wait(3.7);
		set(view.fovmax,  get(lp_fovmax));
		set(display.flash10, on);
		set(layer[tipslogo].visible,true);
		delayedcall(3, set(layer[tipslogo].visible,false));
	)
	</action>

	<action name="hotspot_animate">
		inc(frame,1,get(lastframe),0);
		mul(ypos,frame,frameheight);
		txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));
		delayedcall(0.03, if(loaded, hotspot_animate() ) );
	</action>

	<!-- the 'tooltip' style - show tooltip textfield and update positions as long as hovering -->
	<style name="tooltip"
	       onover="copy(layer[tooltip].html, tooltip);
	               set(layer[tooltip].visible, true);
	               tween(layer[tooltip].alpha, 1.0, 0.5);
	               asyncloop(hovering, copy(layer[tooltip].x,mouse.stagex); copy(layer[tooltip].y,mouse.stagey); );"
	       onout="tween(layer[tooltip].alpha, 0.0, 0.25, default, set(layer[tooltip].visible,false), copy(layer[tooltip].x,mouse.stagex); copy(layer[tooltip].y,mouse.stagey); );"
	       />


	<!-- the 'tooltip' textfield -->
	<layer name="tooltip" keep="true"
	       url="%SWFPATH%/plugins/textfield.swf"
	       parent="STAGE"
	       visible="false" alpha="0"
	       enabled="false"
	       align="lefttop"
	       edge="bottom"
	       oy="-2"
	       autowidth="true"
	       autoheight="true"
	       background="false" backgroundcolor="0xFFFFFF" backgroundalpha="1.0"
	       border="false" bordercolor="0x000000" borderalpha="1.0"
	       borderwidth="1.0" roundedge="0"
	       shadow="0.0" shadowrange="4.0" shadowangle="45" shadowcolor="0x000000" shadowalpha="1.0"
	       textshadow="1" textshadowrange="6.0" textshadowangle="90" textshadowcolor="0x000000" textshadowalpha="1.0"
	       css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:14px;"
	       html=""
	       />

	<action name="util_startup">
			set(targetlink,'_');
			set(targetlinkid,'_');
			set(thumbwidth2, 120);
			set(thumbheight2, 80);
			set(thumbpadding2, 10);
			set(thumbcrop2, "0|40|240|160");
	
			add(thumbxoffset2, thumbheight2, thumbpadding2);
			mul(thumbxcenter2, thumbxoffset2, 0.5);
			add(thumbbarwidth2, thumbwidth2, thumbpadding2);
			mul(thumbbarheight2, thumbxoffset2, scene.count);
			add(thumbbarheight2, thumbpadding2);
	
			copy(layer[scene_list_container].height, thumbbarheight2);
			copy(layer[scene_list_container].width, thumbbarwidth2);
	

			mul(halfheight2, thumbbarheight2, 0.5);
			copy(layer[skin_thumbs_scrollleft].y, halfheight2);
			copy(layer[skin_thumbs_scrollright].y, halfheight2);
	
			for(set(i,0), i LT scene.count, inc(i),
				txtadd(thumbname2,'util_thumb_',get(scene[get(i)].name));
				addlayer(get(thumbname2));
				copy(layer[get(thumbname2)].url, scene[get(i)].thumburl);
				set(layer[get(thumbname2)].keep, true);
				set(layer[get(thumbname2)]._index, get(i));
				set(layer[get(thumbname2)].parent, 'scene_list_container');
				set(layer[get(thumbname2)].align, lefttop);
				copy(layer[get(thumbname2)].width, thumbwidth2);
				copy(layer[get(thumbname2)].height, thumbheight2);
				set(layer[get(thumbname2)].scene_id, get(scene[get(i)].scene_id));
				mul(thumbx2, i, thumbxoffset2);
				add(thumbx2, thumbpadding2);
				copy(layer[get(thumbname2)].x, thumbpadding2);
				copy(layer[get(thumbname2)].y, thumbx2);
				add(scene[get(i)].thumby2, thumbx2, thumbxcenter2);
				copy(scene[get(i)].thumbx2, thumbpadding2);
				set(layer[get(thumbname2)].linkedscene, get(scene[get(i)].name) );
				set(layer[get(thumbname2)].onclick, 
					copy(layer[skin_thumbborder2].parent, name); 
					set(layer[skin_thumbborder2].visible, true);
					set(targetlink,get(linkedscene));
					set(targetlinkid,get(scene_id));
					
				);
				if(true,
					txtadd(thumbtext2, scene.name, get(i));
					addlayer(get(thumbtext2));
					layer[get(thumbtext2)].loadstyle(skin_thumbtext_style);
					set(layer[get(thumbtext2)].keep, true);
					set(layer[get(thumbtext2)].parent, get(thumbname2));
					set(layer[get(thumbtext2)].html, get(scene[get(i)].title));
				  );
			   );

	</action>

	<action name="draglayer">
		if(%1 != dragging,
			copy(drag_currentx, x);
			copy(drag_currenty, y);
			copy(drag_stagex, mouse.stagex);
			copy(drag_stagey, mouse.stagey);
			set(drag_sx, +1);
			set(drag_sy, +1);
			if(align == righttop,    set(drag_sx,-1); );
			if(align == right,       set(drag_sx,-1); );
			if(align == rightbottom, set(drag_sx,-1); set(drag_sy,-1); );
			if(align == bottom,      set(drag_sy,-1); );
			if(align == leftbottom,  set(drag_sy,-1); );
			draglayer(dragging);
		  ,
			if(pressed,
				sub(dx, mouse.stagex, drag_stagex);
				sub(dy, mouse.stagey, drag_stagey);
				mul(dx, drag_sx);
				mul(dy, drag_sy);
				add(x, drag_currentx, dx);
				add(y, drag_currenty, dy);
				delayedcall(0, draglayer(dragging) );
			  );
		  );
	</action>

	<action name="draghotspot">
	<![CDATA[
		if(%1 != dragging,
			spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery);
			sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			draghotspot(dragging);
		  ,
			if(pressed,
				sub(dx, mouse.stagex, drag_adjustx);
				sub(dy, mouse.stagey, drag_adjusty);
				screentosphere(dx, dy, ath, atv);
				copy(print_ath, ath);
				copy(print_atv, atv);
				roundval(print_ath, 3);
				roundval(print_atv, 3);
				delayedcall(0, draghotspot(dragging) );
			  );
		  );
	]]>
	</action>

	<!-- 按钮添加热点 -->
	<action name="addpots">
		set(newspot,"temphotspots");
		addhotspot(get(newspot));
		set(hotspot[get(newspot)].style,"hotspot_ani_white");
		set(hotspot[get(newspot)].ath,get(view.hlookat));
		set(hotspot[get(newspot)].atv,get(view.vlookat));
		set(hotspot[get(newspot)].scale,0.5);
		set(hotspot[get(newspot)].zoom,true);
		set(hotspot[get(newspot)].ondown,"draghotspot()");
		hotspot[get(newspot)].loadstyle();
		set(layer[skin_thumbborder2].visible, false);
		set(layer[scene_list_container].y,0);
		set(layer[scrollslider].y,19);
		set(layer[scene_list].visible,true);
	</action>
	
	<action name="resethotspot">
		if(hots_id != null ,
			txtadd(thumbname3,'util_thumb_',get(linked_name));
			set(layer[skin_thumbborder2].parent, get(thumbname3));
			set(layer[skin_thumbborder2].visible, true);
			mul(yyy,-3,get(layer[get(thumbname3)]._index));
			set(layer[scene_list].visible,true);
			set(layer[scene_list_container].y,0);
			set(layer[scrollslider].y,19);
			layer[scene_list_container].scrollby(0,get(yyy));
		)
	</action>
	
	<!-- 场景加载是添加所有的热点 -->
	<action name="addpots2">
		txtadd(jsnewspot,get(xml.scene),"_h_",%1);
		addhotspot(get(jsnewspot));
		set(hotspot[get(jsnewspot)].style,"hotspot_ani_white|tooltip");
		set(hotspot[get(jsnewspot)].tooltip,%6);
		set(hotspot[get(jsnewspot)].ath,%2);
		set(hotspot[get(jsnewspot)].atv,%3);
		set(hotspot[get(jsnewspot)].scale,0.5);
		set(hotspot[get(jsnewspot)].zoom,true);
		set(hotspot[get(jsnewspot)].hots_id,%5);
		set(hotspot[get(jsnewspot)].linked_name,%4);
		set(hotspot[get(jsnewspot)].ondown,"");
		set(hotspot[get(jsnewspot)].onclick,if(isdelete,js(deleteHotspots(%5)) ,skin_buttonglow(null);set(layer[tooltip].visible,false); tween(scale,0.25,0.5); tween(oy,-20,0.5); tween(alpha,0,0.5); looktohotspot();loadscene(%4,null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); ););
		hotspot[get(jsnewspot)].loadstyle();
	</action>

	<action name="checkTarget">
			if(layer[scene_list].visible==true,
				set(layer[scene_list].visible,false);
				removehotspot("temphotspots");
				set(targetlink,'_');
				set(targetlinkid,'_');
				set(isdelete,false);
				skin_buttonglow(null);
				set(layer[tooltip].visible,false);
			)
	</action>

	<action name="savepots">
		if(layer[skin_thumbborder2].visible == false,
			js(alert("请先选择目标场景!"));,
			js(savepots(get(hotspot["temphotspots"].ath),get(hotspot["temphotspots"].atv),get(targetlink),get(targetlinkid),get(xml.scene),get(scene[get(xml.scene)].scene_id),get(scene[get(targetlink)].title)))
			)

	</action>
	
		
	<action name="deletepots">
		if(isdelete,set(isdelete,false);skin_buttonglow(null);if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));,
		set(isdelete,true);copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() ););
		
	</action>
	
	
	<layer name="viewcounttext"  visible="false" url="%SWFPATH%/plugins/textfield.swf" align="righttop"  y="15" x="15" height="30" keep="true" autowidth="true" background="true" 
	 backgroundcolor="0x000000" bgalpha="1.0"  roundedge="15 15 15 15"			maskchildren="true"   html="1" css="color:#FFFFFF; font-family:Arial; font-size:22px;text-indent: 35px;" padding="2 5 0 0">
		<layer name="viewcountimg"  align="leftcenter" x="10" zorder="1" width="22" url="%SWFPATH%/skin/addico_view.png"  height="22" bgcapture="false" />
	</layer>



	<layer name="mysay" visible="false"  ondown="dragpinglun()" y="-60" x="-25" keep="true" width="200" height="10" align="left" type="container"   maskchildren="false"  >
		<layer name="mysay_background" visible="true" keep="true" height="50" width="200" align="center" type="container" bgcolor="0xBE6B23" bgalpha="0.4"  bgroundedge="10 10 10 10"  bgcapture="true"  maskchildren="false" >
			<layer name="mysay_head" ondown="dragpinglun()" align="leftcenter" x="10" zorder="1" width="40" url="%SWFPATH%/skin/g.jpg"  height="40" bgcapture="true" />
			<layer name="mysay_text" ondown="dragpinglun()" url="%SWFPATH%/plugins/textfield.swf" align="leftcenter"  x="60" width="120"  background="false" border="false"   html="拖动头像到想要评论的位置" css="color:#FFFFFF; font-family:Arial; font-size:14px;line-height:180%;"/>
		</layer>
		<layer name="mysay_bottom" ondown="dragpinglun()" align="leftcenter" x="25" y="40" scale="0.5" zorder="1" width="24" url="%SWFPATH%/skin/vtourskin_newbase4.png"  height="60" bgcapture="true" />
	</layer>
	<action name="initComment">
		txtadd(newlayername,"aa",%8,"_",%9,"_",%1);
		txtadd(newhotspotname,get(newlayername),"ht");
		addhotspot(get(newhotspotname));
		set(hotspot[get(newhotspotname)].visible,true);
		set(hotspot[get(newhotspotname)].ispl,true);
		set(hotspot[get(newhotspotname)].krpano_id,%8);
		set(hotspot[get(newhotspotname)].ath,%2);
		set(hotspot[get(newhotspotname)].atv,%3);
		set(hotspot[get(newhotspotname)].url,"%SWFPATH%/skin/vtourskin_newbase4.png");
		set(hotspot[get(newhotspotname)].zorder,1);
		set(hotspot[get(newhotspotname)].scale,0.5);
		set(hotspot[get(newhotspotname)].crop,"1|1|1|1");
		//hotspot[get(newhotspotname)].loadstyle();
		txtadd(parentname,'hotspot[',get(newhotspotname),']');
		txtadd(pinglunondown,"dragpinglun(",get(parentname),")");
		
		
		addlayer(get(newlayername));
		set(layer[get(newlayername)].visible,true);
		set(layer[get(newlayername)].ispl,true);
		set(layer[get(newlayername)].krpano_id,%8);
		set(layer[get(newlayername)].ondown,"dragpinglun()");
		set(layer[get(newlayername)].keep,true);
		set(layer[get(newlayername)].width,200);
		set(layer[get(newlayername)].height,10);
		set(layer[get(newlayername)].y,-55);
		set(layer[get(newlayername)].x,-25);
		set(layer[get(newlayername)].align,"left");
		set(layer[get(newlayername)].type,"container");
		set(layer[get(newlayername)].maskchildren,false);
		set(layer[get(newlayername)].parent,get(parentname));
		
		txtadd(newlayerhead,get(newlayername),"_head");
		addlayer(get(newlayerhead));
		set(layer[get(newlayerhead)].visible,true);
		set(layer[get(newlayerhead)].ispl,true);
		set(layer[get(newlayerhead)].krpano_id,%8);
		set(layer[get(newlayerhead)].ondown,"dragpinglun()");
		set(layer[get(newlayerhead)].align,"leftcenter");
		set(layer[get(newlayerhead)].zorder,1);
		set(layer[get(newlayerhead)].height,50);
		set(layer[get(newlayerhead)].width,50);
		if(%7 == nohead,
		set(layer[get(newlayerhead)].url,"%SWFPATH%/skin/g.jpg");
		,
		set(layer[get(newlayerhead)].url,%7);
		);
		set(layer[get(newlayerhead)].roundedge,"4 4 4 4");
		set(layer[get(newlayerhead)].bgcapture,true);
		set(layer[get(newlayerhead)].parent,get(newlayername));
		

		txtadd(newlayertext,get(newlayername),"_text");
		addlayer(get(newlayertext));
		set(layer[get(newlayertext)].visible,true);
		set(layer[get(newlayertext)].ispl,true);
		set(layer[get(newlayertext)].krpano_id,%8);
		set(layer[get(newlayertext)].ondown,"dragpinglun()");
		set(layer[get(newlayertext)].align,"leftcenter");
		set(layer[get(newlayertext)].url,"%SWFPATH%/plugins/textfield.swf");
		set(layer[get(newlayertext)].autowidth,"true");
		set(layer[get(newlayertext)].backgroundalpha,0.4);
		set(layer[get(newlayertext)].vcenter,true);
		set(layer[get(newlayertext)].x,51);
		set(layer[get(newlayertext)].height,50);
		set(layer[get(newlayertext)].background,true);
		set(layer[get(newlayertext)].backgroundcolor,"0x000000");
		set(layer[get(newlayertext)].border,false);
		set(layer[get(newlayertext)].html,%4);
		set(layer[get(newlayertext)].roundedge,"4 4 4 0");
		set(layer[get(newlayertext)].css,"color:#FFFFFF; font-family:Arial; font-size:20px;line-height:100%;");
		set(layer[get(newlayertext)].parent,get(newlayername));

		txtadd(newlayerbottom,get(newlayername),"_bottom");
		addlayer(get(newlayerbottom));
		set(layer[get(newlayerbottom)].visible,true);
		set(layer[get(newlayerbottom)].ispl,true);
		set(layer[get(newlayerbottom)].krpano_id,%8);
		set(layer[get(newlayerbottom)].ondown,"dragpinglun()");
		set(layer[get(newlayerbottom)].align,"leftcenter");
		set(layer[get(newlayerbottom)].url,"%SWFPATH%/skin/vtourskin_newbase4.png");
		set(layer[get(newlayerbottom)].x,19);
		set(layer[get(newlayerbottom)].y,40);
		set(layer[get(newlayerbottom)].scale,0.5);
		set(layer[get(newlayerbottom)].zorder,1);
		set(layer[get(newlayerbottom)].width,24);
		set(layer[get(newlayerbottom)].height,60);
		set(layer[get(newlayerbottom)].bgcapture,true);
		set(layer[get(newlayerbottom)].parent,get(newlayername));
	</action>
	
	<action name="removeAll">
	for(set(i,0), i LT hotspot.count, inc(i),
			if(hotspot[get(i)].ispl AND hotspot[get(i)].krpano_id != get(scene[get(xml.scene)].scene_id),
				set(hotspot[get(i)].visible,false);
			  );
		  );
		for(set(i,0), i LT layer.count, inc(i),
			if(layer[get(i)].ispl AND get(layer[get(i)].krpano_id) != get(scene[get(xml.scene)].scene_id),
				set(layer[get(i)].visible,false);
			  );
		  );
	</action>
	
	<action name="displayAll">
	if(%1,
		for(set(i,0), i LT hotspot.count, inc(i),
			set(displayAllkrpano_id,get(hotspot[get(i)].krpano_id));
			set(displayAllkrpano_id2,get(scene[get(xml.scene)].scene_id));
			if(hotspot[get(i)].ispl AND displayAllkrpano_id === displayAllkrpano_id2,
				set(hotspot[get(i)].visible,true);
			  );
		  );
		for(set(i,0), i LT layer.count, inc(i),
			set(displayAllkrpano_id,get(layer[get(i)].krpano_id));
			set(displayAllkrpano_id2,get(scene[get(xml.scene)].scene_id));
			if(layer[get(i)].ispl AND displayAllkrpano_id === displayAllkrpano_id2,
				set(layer[get(i)].visible,true);
			  );
		  );
		,
		for(set(i,0), i LT hotspot.count, inc(i),
			if(hotspot[get(i)].ispl,
				set(hotspot[get(i)].visible,false);
			  );
		  );
		for(set(i,0), i LT layer.count, inc(i),
			if(layer[get(i)].ispl,
				set(layer[get(i)].visible,false);
			  );
		  );
	);
		if(%1,
			set(layer[skin_btn_yc_img].onclick,'displayAll(false)');
			set(layer[skin_btn_yc_text].onclick,'displayAll(false)');
			set(layer[skin_btn_yc_text].html,"隐藏");
			,
			set(layer[skin_btn_yc_img].onclick,'displayAll(true)');
			set(layer[skin_btn_yc_text].onclick,'displayAll(true)');
			set(layer[skin_btn_yc_text].html,"显示");
		)
	</action>
	
	<action name="resetDisplayHtml">
			set(layer[skin_btn_yc_img].onclick,'displayAll(false)');
			set(layer[skin_btn_yc_text].onclick,'displayAll(false)');
			set(layer[skin_btn_yc_text].html,"隐藏");
	</action>

	<action name="dragpinglun">
		if(%1 != dragging,
			spheretoscreen(hotspot[spot1].ath, hotspot[spot1].atv, hotspotcenterx, hotspotcentery);
			sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			dragpinglun(dragging);
		  ,
			if(pressed,
				sub(dx, mouse.stagex, drag_adjustx);
				sub(dy, mouse.stagey, drag_adjusty);
				screentosphere(dx, dy, hotspot[spot1].ath, hotspot[spot1].atv);
				copy(print_ath, hotspot[spot1].ath);
				copy(print_atv, hotspot[spot1].atv);
				roundval(print_ath, 3);
				roundval(print_atv, 3);
				delayedcall(0, dragpinglun(dragging) );
			  );
		  );
	</action>
	
	<action name="openthumbs">
		if(skin_settings.thumbs_isopened,
		  if(scene.count GT 1,skin_showthumbs(),set(layer[skin_btn_gyro].x,0));
		  set(skin_settings.thumbs_isopened,false);
		);
	</action>
	
	<action name="showView" devices="flash">
		set(viewCount,get(scene[get(xml.scene)].view_count));
		set(layer[viewcounttext].html,get(viewCount));
		set(layer[viewcounttext].autowidth,true);
		delayedcall(1,showView_next());
	</action>
	<action name="showView" devices="html5">
		set(viewCount,get(scene[get(xml.scene)].view_count));
		set(layer[viewcounttext].html,get(viewCount));
	</action>
	
	<action name="krpanoInit">
		removeAll();
		js(loadhotspots(get(xml.scene)));
		js(addView_before(%1));
		showView();
		showGood();
		js(initComment(get(scene[get(xml.scene)].scene_id)));
	</action>
	
	<action name="showView_next">
		set(layer[viewcounttext].autowidth,true);
		set(viewwidth,get(layer[viewcounttext].width));
		add(newviewwidth,viewwidth,42);
		set(layer[viewcounttext].autowidth,false);
		set(layer[viewcounttext].width,get(newviewwidth));
	
	</action>
	
	<action name="showGood">
		set(goodCount,get(scene[get(xml.scene)].good_count));
		js(showGood_before(get(goodCount),get(scene[get(xml.scene)].scene_id)));
	</action>
	<action name="showGood_next">
		set(layer[skin_btn_hp_text].html,%1);
		if(device.flash,
			if(%1 GT 99999,
				set(layer[skin_btn_hp_text_flash].width,105);,
				if(%1 GT 9999,
					set(layer[skin_btn_hp_text_flash].width,75);,
					if(%1 GT 999,
						set(layer[skin_btn_hp_text_flash].width,65);,
						if(%1 GT 99,
							set(layer[skin_btn_hp_text_flash].width,55);,
							if(%1 GT 99,
							set(layer[skin_btn_hp_text_flash].width,45);,
							set(layer[skin_btn_hp_text_flash].width,45););
						);
					);
				);
			);
		);
	</action>
	<action name="showGood_next_next">
		set(goodwidth,get(layer[skin_btn_hp_text].width));
		add(newgoodwidth,goodwidth,40);
		trace(get(newgoodwidth));
		set(layer[skin_btn_hp_text].autowidth,false);
		set(layer[skin_btn_hp_text].width,get(newgoodwidth));
	</action>
	
	<action name="showComment">
		set(hotspot[spot1].ath,get(view.hlookat));
		set(hotspot[spot1].atv,get(view.vlookat));
		set(layer[mysay].visible,true);
		set(layer[mysay].parent,hotspot[spot1]);
		js(showComment());
	</action>
	<action name="cancelComment">
		set(layer[mysay].visible,false);
	</action>
	<action name="commentOk">
		js(commentOk_before(%1,get(hotspot[spot1].ath),get(hotspot[spot1].atv),get(scene[get(xml.scene)].scene_id)));
	</action>
	<action name="setTempUrl">
		set(layer[mysay_head].url,%1);
	</action>
	
</krpano>