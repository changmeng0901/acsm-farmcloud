<krpano>

	<!-- krpano 1.19.pr5 - Virtual Tour Skin -->
	<security>
<crossdomainxml url="calc:custom_set.filedomain + '/crossdomain.xml'" /></security>

	<!-- skin settings (can be overridden in the tour.xml) -->
	<skin_settings maps="false"
	               maps_type="google"
	               maps_bing_api_key=""
	               maps_zoombuttons="false"
	               gyro="true"
	               webvr="get:custom_set.vrShow"
	               littleplanetintro="get:custom_set.littleplanetShow"
	               test="calc:custom_set.filedomain + '/crossdomain.xml'"
	               title="false"
	               thumbs="true"
	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
	               thumbs_opened="get:custom_set.listShow"
	               thumbs_text="true"
	               thumbs_dragging="true"
	               thumbs_onhoverscrolling="false"
	               thumbs_scrollbuttons="false"
	               thumbs_scrollindicator="false"
	               thumbs_loop="false"
	               tooltips_buttons="false"
	               tooltips_thumbs="false"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               deeplinking="false"
	               loadscene_flags="MERGE"
	               loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
	               loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
	               loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
	               loadingtext="loading..."
	               layout_width="100%"
	               layout_maxwidth="100%"
	               controlbar_width="100%"
	               controlbar_height="40"
	               controlbar_offset="50"
	               controlbar_offset_closed="-40"
	               controlbar_overlap.no-fractionalscaling="0"
	               controlbar_overlap.fractionalscaling="0"
	               design_skin_images="vtourskin.png"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.3"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0"
	               design_thumbborder_bgborder="3 0xFFFFFF 1.0"
	               design_thumbborder_padding="2"
	               design_thumbborder_bgroundedge="0"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="0"
	               />


	<!-- save the url path of this xml file (the url value will be adjusted during xml parsing) -->
	<vtourskinxmlpath url="./" />


	<!-- mouse / touch / keyboard(button) control settings - http://krpano.com/docu/xml/#control -->
	<control mouse="drag"
	         touch="drag"
	         zoomtocursor="false"
	         zoomoutcursor="false"
	         draginertia="0.1"
	         dragfriction="0.9"
	         movetoaccelerate="1.0"
	         movetospeed="10.0"
	         movetofriction="0.8"
	         keybaccelerate="0.09"
	         keybfriction="0.94"
	         keybfovchange="0.25"
	         mousefovchange="1.0"
	         fovspeed="3.0"
	         fovfriction="0.9"
	         bouncinglimits="true"
	         />

	<!-- mouse cursors - http://krpano.com/docu/xml/#cursors -->
	<cursors standard="default"
	         dragging="move"
	         moving="move"
	         />


	<!-- ensure stagescale 2x for mobile devices (regardless if mobilescale is 0.5 or 1.0) -->
	<krpano stagescale="calc:stagescale * 1" if="stagescale LT 1.0" devices="mobile" />


	<!-- include VR support -->
	<include url="../plugins/webvr.xml" devices="html5" />

	<!-- overwrite some settings from the webvr.xml for the skin integration -->
	<plugin name="WebVR" keep="true" devices="html5" 
			pluginurl="%SWFPATH%/plugins/webvr.js"
			url=""
	        multireslock.desktop="true"
	        multireslock.mobile.or.tablet="false"
	        mobilevr_fake_support="true"
	        onavailable="removelayer(webvr_enterbutton); skin_arrange_buttons(); webvr_onavailable();"
	        onentervr="skin_showloading(false); webvr_onentervr(); webvr_setup();"
	        onexitvr="webvr_onexitvr(); webvr_setup();"
	        />

	<!-- webvr button style (adjust to match default skin style) -->
	<style name="webvr_button_style"
	       border="false"
	       shadow="0.01" shadowrange="9.0" shadowcolor="0xFFFFFF" shadowalpha="0.5"
	       />

	<!-- show a 'rotate the device' info when the mobile device is in portrait mode in VR mode -->
	<layer name="webvr_rotate_to_landscape_request" keep="true" vr="true" devices="mobile"
	       url="rotate_device.png" scale="0.5"
	       align="top" edge="center" y="28%"
	       autoalpha="true" alpha="0.0"
	       enabled="false"
	       />

	<events name="webvr_events" keep="true" devices="html5"
	        onresize.mobile="webvr_act_as_gyro_in_portrait_mode();"
	        onviewchange=""
	        />

	<action name="webvr_setup">
		if(webvr.isenabled,
			set(display.hotspotrenderer, webgl);
			copy(loadscene_flags_backup, skin_settings.loadscene_flags);
			set(skin_settings.loadscene_flags, MERGE|KEEPVIEW|KEEPMOVING|NOPREVIEW);
			webvr_act_as_gyro_in_portrait_mode(true);
			if(scene.count GT 1,
				set(hotspot[webvr_prev_scene].visible, true);
				set(hotspot[webvr_next_scene].visible, true);
				set(events[webvr_events].onviewchange, webvr_menu_following());
			  );
		  ,
			set(display.hotspotrenderer, auto);
			if(loadscene_flags_backup !== null, copy(skin_settings.loadscene_flags, loadscene_flags_backup));
			tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
			set(hotspot[webvr_prev_scene].visible, false);
			set(hotspot[webvr_next_scene].visible, false);
			set(events[webvr_events].onviewchange, null);
		  );
	</action>

	<action name="webvr_act_as_gyro_in_portrait_mode">
		if(device.mobile AND webvr.isenabled,
			div(aspect, stagewidth, stageheight);
			if(aspect != lastaspect OR '%1' == 'true',
				copy(lastaspect, aspect);
				if(stagewidth GT stageheight,
					<!-- landscape mode - use stereo rendering and a direct/fast gyro sensor mode -->
					set(display.stereo, true);
					set(webvr.mobilevr_sensor_mode, 3);
					webvr.update();
					tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
				  ,
					<!-- portrait mode - use normal rendering and a smoother/slower gyro sensor mode -->
					set(display.stereo, false);
					set(webvr.mobilevr_sensor_mode, 1);
					webvr.update();
					tween(layer[webvr_rotate_to_landscape_request].alpha, 1.0);
					delayedcall(3.0, tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 1.0); );
				  );
			  );
		  ,
			set(lastaspect, 0);
		  );
	</action>

	<!-- VR scene switching hotspots -->
	<style name="webvr_menu_style" depth="800" scale="0.5" distorted="true" ath="0" atv="45" alpha="0.5" />
	<hotspot name="webvr_prev_scene" keep="true" style="skin_base|webvr_menu_style" crop="0|64|64|64"  ox="-64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(-1);" visible="false" devices="html5.and.webgl" />
	<hotspot name="webvr_next_scene" keep="true" style="skin_base|webvr_menu_style" crop="64|64|64|64" ox="+64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(+1);" visible="false" devices="html5.and.webgl" />

	<!-- floating/following VR hotspots -->
	<action name="webvr_menu_following" type="Javascript" devices="html5"><![CDATA[
		var hs1 = krpano.get("hotspot[webvr_prev_scene]");
		var hs2 = krpano.get("hotspot[webvr_next_scene]");
		if(!hs1.hovering && !hs2.hovering)
		{
			var f = 0.01;	// follow speed factor
			var h = krpano.view.hlookat;
			var v = krpano.view.vlookat;
			var hsh = hs1.ath;
			var hsv = hs1.atv;
			h   = (h  -(h|0))   + (((h|0)  +360180)%360) - 180.0;
			v   = (v  -(v|0))   + (((v|0)  +360180)%360) - 180.0;
			hsh = (hsh-(hsh|0)) + (((hsh|0)+360180)%360) - 180.0;
			var dh = h - hsh;
			dh += (dh > 180) ? -360 : (dh < -180) ? 360 : 0
			hsh += dh*f;
			var a = Math.abs(v - hsv) / 90.0;
			a = 1.0 * Math.max(1.0 - 2.0*Math.sqrt(a), 0);
			v = v + 55.0 - v*1.5;
			hsv = hsv*(1.0 - f) + v*f;
			hs1.ath = hs2.ath = hsh;
			hs1.atv = hs2.atv = hsv;
			hs1.alpha = hs2.alpha = a;
		}
	]]></action>
	<!-- VR support -->



	<!-- skin styles -->

	<!-- skin_base - the base skin image -->
	<style name="skin_base" url="calc:vtourskinxmlpath.url + skin_settings.design_skin_images" />


	<!-- skin_glow - button glowing (if additional ondown,onup,onout,over events are needed, this style provides ondown2,onup2,onover2,onout2 events) -->
	<style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); if(onover2, onover2() );"
	       onout="if(skin_lockglow === name AND !pressed, skin_buttonglow(null);delete(skin_lockglow); ); if(onout2, onout2() );"
	       onup="if(onup2, onup2()); delayedcall(0, if(hovering AND enabled, skin_buttonglow(get(name),0.3); , skin_buttonglow(null);delete(skin_lockglow); ); );"
	       />

	<!-- skin_thumbtext_style - style/textfield for the (optional, skin_settings.thumbs_text) thumbnails texts -->
	<style name="skin_thumbtext_style" url="%SWFPATH%/plugins/textfield.swf" align="bottom" width="100%" autoheight="true" y="5" enabled="false" background="false" border="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:10px;'" textshadow="get:skin_settings.design_text_shadow" />

	<!-- skin_hotspotstyle - style for the hotspots -->
	<style name="skin_hotspotstyle" url="vtourskin_hotspot.png" scale="0.5" edge="top" distorted="true"
	       tooltip=""
	       onclick="if(linkedscene, set(enabled,false); skin_hidetooltips(); tween(depth|alpha|oy|rx, 4000|0.0|-50|-60, 0.5, default, loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); ); );"
	       onover="tween(scale,0.55);"
	       onout="tween(scale,0.5);"
	       onloaded="if(linkedscene AND skin_settings.tooltips_hotspots, copy(tooltip,scene[get(linkedscene)].title); loadstyle(skin_tooltips); );"
	       />

	<!-- skin_tooltip - style for the thumb, hotspot and mapspot tooltips -->
	<style name="skin_tooltips"
	       onover.mouse="copy(layer[skin_tooltip].html, tooltip);
	                     set(layer[skin_tooltip].visible, true);
	                     tween(layer[skin_tooltip].alpha, 1.0, 0.1);
	                     asyncloop(hovering, copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );"
	       onout.mouse="tween(layer[skin_tooltip].alpha, 0.0, 0.1, default, set(layer[skin_tooltip].visible,false), copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );"
	       />


	<!-- the tooltip textfield -->
	<layer name="skin_tooltip" keep="true"
	       url="%SWFPATH%/plugins/textfield.swf"
	       parent="STAGE"
	       visible="false" alpha="0" enabled="false" zorder="2"
	       align="lefttop" edge="bottom" oy="-2" width="200" autoheight="true"
	       background="false" backgroundcolor="0xFFFFFF" backgroundalpha="1.0"
	       border="false" bordercolor="0x000000" borderalpha="1.0" borderwidth="1.0" roundedge="0"
	       shadow="0.0" shadowrange="4.0" shadowangle="45" shadowcolor="0x000000" shadowalpha="1.0"
	       textshadow="get:skin_settings.design_text_shadow" textshadowrange="6.0" textshadowangle="90" textshadowcolor="0x000000" textshadowalpha="1.0"
	       css="calc:skin_settings.design_text_css + ' text-align:center; font-size:16px;'"
	       html=""
	       />


	<!-- skin layout -->
	<layer name="skin_layer" keep="true" type="container" align="top" width="get:skin_settings.layout_width" maxwidth="get:skin_settings.layout_maxwidth" height="100%" maskchildren="true" visible="false" bgcapture="false" zorder="1">
		<layer name="skin_scroll_window" type="container" align="bottom" width="100%" height="100%" x="0" y="calc:skin_settings.controlbar_offset + skin_settings.controlbar_height - skin_settings.controlbar_overlap" maskchildren="true" onloaded="skin_calc_opened_closed();" zorder="1">
			<layer name="skin_scroll_layer" type="container" align="bottom" width="get:skin_settings.controlbar_width" height="100%" x="0" y="200" y_offset="get:skin_settings.controlbar_overlap" accuracy="1" bgalpha="get:skin_settings.design_bgalpha" bgcolor="get:skin_settings.design_bgcolor" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow">
				<layer name="skin_title" url="%SWFPATH%/plugins/textfield.swf" align="lefttop" edge="leftbottom" x="4" y="0" zorder="4" enabled="false" background="false" border="false" css="calc:skin_settings.design_text_css + ' text-align:left; font-style:italic; font-size:12px;'" textshadow="get:skin_settings.design_text_shadow" visible="false" onautosized="" />
				<layer name="skin_scroll_container" type="container" align="lefttop" width="100%" height="100%" x="0" y="0" bgroundedge="get:skin_settings.design_bgroundedge" maskchildren="true">
					<layer name="skin_thumbs_container" type="container" align="lefttop" width="100%" height="100%" visible="false">
						<layer name="skin_thumbs_scrollleft"  style="skin_base|skin_glow" crop="0|64|64|64"  align="lefttop"  edge="left"  x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));" visible="false" />
						<layer name="skin_thumbs_scrollright" style="skin_base|skin_glow" crop="64|64|64|64" align="righttop" edge="right" x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));" visible="false" />
						<layer name="skin_thumbs_scrollindicator" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="lefttop" width="0" y="100" height="2" visible="false" enabled="false" />
						<layer name="skin_thumbs" state="closed" url.flash="%SWFPATH%/plugins/scrollarea.swf" url.html5="%SWFPATH%/plugins/scrollarea.js" direction="h" align="top" width="100%" height="100" zorder="1" onloaded="skin_updatescroll();" onscroll="skin_updatethumbscroll();" />
					</layer>
				</layer>
			</layer>
		</layer>

		<layer name="skin_loadingtext" url="%SWFPATH%/plugins/textfield.swf" align="center" x="5" y="-5" html="get:skin_settings.loadingtext" visible="false" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-style:italic; font-size:22px;'" textshadow="get:skin_settings.design_text_shadow" />
		<layer name="skin_buttonglow"  style="skin_base" crop="64|384|64|64" align="center" x="0" y="1" scale="1.0" alpha="0.0" visible="false" enabled="false" />
		<layer name="skin_thumbborder" type="container" x="get:skin_settings.design_thumbborder_padding" y="get:skin_settings.design_thumbborder_padding" width="calc:skin_settings.thumbs_width - 2*skin_settings.design_thumbborder_padding" height="calc:skin_settings.thumbs_height - 2*skin_settings.design_thumbborder_padding" visible="false" enabled="false" align="lefttop" bgborder="get:skin_settings.design_thumbborder_bgborder" bgroundedge="get:skin_settings.design_thumbborder_bgroundedge" />
	</layer>

	<!-- previous/next scene buttons for the hidden skin mode -->
	<layer name="skin_btn_prev_fs" keep="true" type="container" align="lefttop"  x="-50" width="40" height="100%" bgcapture="true" alpha="0.25" capture="false" zorder="2" onclick="skin_nextscene_loop(-1);" onhover="tween(alpha,1.0);" onout="tween(alpha,0.25);" ondown.touch="onhover();" onup.touch="onout();">
		<layer name="skin_btn_prev_fs_icon" style="skin_base" crop="0|64|64|64"  align="center" scale="0.5" enabled="false" />
	</layer>
	<layer name="skin_btn_next_fs" keep="true" type="container" align="righttop" x="-50" width="40" height="100%" bgcapture="true" alpha="0.25" capture="false" zorder="2" onclick="skin_nextscene_loop(+1);" onhover="tween(alpha,1.0);" onout="tween(alpha,0.25);" ondown.touch="onhover();" onup.touch="onout();">
		<layer name="skin_btn_next_fs_icon" style="skin_base" crop="64|64|64|64" align="center" scale="0.5" enabled="false" />
	</layer>


	<!-- gyro plugin -->
	<plugin name="skin_gyro" keep="true" url="" html5_url="%SWFPATH%/plugins/gyro2.js" devices="html5" enabled="false" onavailable="skin_arrange_buttons();" />


	<!-- skin events -->
	<events name="skin_events" keep="true"
	        onxmlcomplete="set(layer[fullscreen_btn].isv,true); set(events[skin_events].onxmlcomplete,null); skin_startup();"
	        onnewpano="skin_showloading(true); skin_update_scene_infos(); skin_deeplinking_update_url();stopRatoteTwo();"
	        onremovepano="skin_showloading(true);stopRatoteTwo();"
	        onloadcomplete="skin_showloading(false);startAutoRatote();"
	        onidle="idleAction();"
	        onresize="skin_onresize();"
	        onenterfullscreen.fullscreensupport="set(layer[fullscreen_btn].crop, '76|693|51|51');"
	        onexitfullscreen.fullscreensupport="set(layer[fullscreen_btn].crop, '0|693|51|51');if(layer[fullscreen_btn].onclick === 'switch(fullscreen);exitFullScreen();',exitFullScreen();)"
	        onkeydown="skin_keydown_event();stopRatoteTwo();"
	        onmousedown="stopRatoteTwo();"
	        onmousewheel="images_onmousewheel();"
	        />
	
	<action name="enterFullScreen">
		set(layer[custom_logo].isv,get(layer[custom_logo].visible));
		set(layer[custom_logo].visible,false);
		
		set(layer[choseList].isv,get(layer[choseList].visible));
		set(layer[choseList].visible,false);
		
		set(layer[card_layer].isv,get(layer[card_layer].visible));
		set(layer[card_layer].visible,false);
		
		set(layer[info_layer].visible,false);
		set(scene[get(xml.scene)].isv,get(scene[get(xml.scene)].info_show));
		set(scene[get(xml.scene)].info_show,0);
		
		set(layer[navigation_layer].isv,get(layer[navigation_layer].visible));
		set(layer[navigation_layer].visible,false);
		
		set(layer[rotate_layer].isv,get(layer[rotate_layer].visible));
		set(layer[rotate_layer].visible,false);
		
		set(layer[gyroBtn].isv,get(layer[gyroBtn].visible));
		set(layer[gyroBtn].visible,false);
		
		set(layer[micro_shop_layer].isv,get(layer[micro_shop_layer].visible));
		set(layer[micro_shop_layer].visible,false);
		
		set(layer[join_layer].isv,get(layer[join_layer].visible));
		set(layer[join_layer].visible,false);
		
		set(layer[comment_layer].isv,get(layer[comment_layer].visible));
		set(layer[comment_layer].visible,false);
		
		set(layer[skin_btn_hp_button].isv,get(layer[skin_btn_hp_button].visible));
		set(layer[skin_btn_hp_button].visible,false);
		

		set(layer[share_button].visible,false);
		
		set(layer[viewcounttext].isv,get(layer[viewcounttext].visible));
		set(layer[viewcounttext].visible,false);
		
		set(layer[moreset].isv,get(layer[moreset].visible));
		set(layer[moreset].visible,false);
				
		set(layer[music_btn].isv,get(layer[music_btn].visible));
		set(layer[music_btn].visible,false);
		
		set(layer[vebvrlayer].isv,get(layer[vebvrlayer].visible));
		set(layer[vebvrlayer].visible,false);
		
		set(layer[vebvrlayer2].isv,get(layer[vebvrlayer2].visible));
		set(layer[vebvrlayer2].visible,false);
		
		set(layer[jiaruwomen].isv,get(layer[jiaruwomen].visible));
		set(layer[jiaruwomen].visible,false);

		set(layer[fullscreen_btn].isv,false);
		
		delayedcall(0.4,skin_showthumbs(false);); 
		set(layer[fullscreen_btn].onclick,"switch(fullscreen);exitFullScreen();");
		
	</action>
	<action name="exitFullScreen">
		set(layer[custom_logo].visible,get(layer[custom_logo].isv));
		
		set(layer[choseList].visible,get(layer[choseList].isv));
		
		set(layer[card_layer].visible,get(layer[card_layer].isv));

		set(scene[get(xml.scene)].info_show,get(scene[get(xml.scene)].isv));

		set(layer[navigation_layer].visible,get(layer[navigation_layer].isv));

		set(layer[rotate_layer].visible,get(layer[rotate_layer].isv));

		set(layer[gyroBtn].visible,get(layer[gyroBtn].isv));

		set(layer[micro_shop_layer].visible,get(layer[micro_shop_layer].isv));

		set(layer[join_layer].visible,get(layer[join_layer].isv));

		set(layer[comment_layer].visible,get(layer[comment_layer].isv));

		set(layer[skin_btn_hp_button].visible,get(layer[skin_btn_hp_button].isv));

		set(layer[share_button].visible,get(layer[share_button].isv));

		set(layer[viewcounttext].visible,get(layer[viewcounttext].isv));

		set(layer[moreset].visible,get(layer[moreset].isv));
		
		set(layer[music_btn].visible,get(layer[music_btn].isv));

		set(layer[vebvrlayer].visible,get(layer[vebvrlayer].isv));

		set(layer[vebvrlayer2].visible,get(layer[vebvrlayer2].isv));

		set(layer[jiaruwomen].visible,get(layer[jiaruwomen].isv));
		
		set(layer[fullscreen_btn].isv,true);
		
		skin_showthumbs(false);
		
		set(layer[fullscreen_btn].onclick,"switch(fullscreen);enterFullScreen();");
		setFrame();
	</action>

	<!-- skin actions -->
	<action name="skin_startup">
		set(islittlecomplate,true);
		<!-- apply skin settings on startup -->
		if(scene.count == 1,set(skin_settings.thumbs,false);set(layer[choseList].visible,false));
		if(skin_settings.thumbs,
			if(skin_settings.thumbs_opened, set(layer[skin_thumbs].state,'opened'); set(layer[skin_thumbs_container].visible,true); );
			copy(layer[skin_thumbs].draggable, skin_settings.thumbs_dragging);
			if(skin_settings.thumbs_onhoverscrolling AND device.mouse,
				set(layer[skin_thumbs].draggable, false);
				set(layer[skin_thumbs].onhover_autoscrolling, true); 
			  );
		  );

		if(skin_settings.gyro AND !device.desktop AND device.html5,
			copy(plugin[skin_gyro].url, plugin[skin_gyro].html5_url);
		  );

		if(custom_set.vrShow AND device.html5 AND device.webgl AND custom_set.wx == false,
			copy(plugin[WebVR].url, plugin[WebVR].pluginurl);
		  );
		

		if(skin_settings.littleplanetintro AND (device.webgl OR device.flash),
			skin_setup_littleplanetintro();
			,
			set(auto_status,1);
		  );
		
		skin_addthumbs();
		skin_onresize();
		skin_updatescroll();
		set(layer[skin_layer].visible, true);
		if(custom_set.bgmShowed, playsound(bgsnd, get(custom_set.bgmUrl), 0));
	</action>


	<action name="skin_addthumbs">
		if(skin_settings.thumbs == false,
			set(layer[skin_btn_thumbs].visible,false);
		  ,
		  	
			copy(thumbwidth, skin_settings.thumbs_width);
			copy(thumbheight, skin_settings.thumbs_height);
			copy(thumbpadding, skin_settings.thumbs_padding);
			copy(thumbcrop, skin_settings.thumbs_crop);

			add(thumbxoffset, thumbwidth, thumbpadding);
			mul(thumbxcenter, thumbxoffset, 0.5);
			mul(thumbbarwidth, thumbxoffset, scene.count);
			add(thumbbarwidth, thumbpadding);
			add(thumbbarheight, thumbpadding, thumbheight);
			add(thumbbarheight, thumbpadding);

			if(skin_settings.thumbs_scrollindicator,
				copy(layer[skin_thumbs_scrollindicator].y, thumbbarheight);
				add(thumbbarheight, layer[skin_thumbs_scrollindicator].height);
			);

			copy(layer[skin_thumbs].height, thumbbarheight);
			copy(layer[skin_thumbs].width, thumbbarwidth);

			mul(halfheight, thumbbarheight, 0.5);
			copy(layer[skin_thumbs_scrollleft].y, halfheight);
			copy(layer[skin_thumbs_scrollright].y, halfheight);

			set(thumb_cnt,0);
			for(set(i,0), i LT scene.count, inc(i),
				inc(thumb_cnt);
				txtadd(thumbname,'skin_thumb_',get(i));
				addlayer(get(thumbname));
				copy(layer[get(thumbname)].url, scene[get(i)].thumburl);
				set(layer[get(thumbname)].keep, true);
				set(layer[get(thumbname)].parent, 'skin_thumbs');
				set(layer[get(thumbname)].align, lefttop);
				copy(layer[get(thumbname)].width, thumbwidth);
				copy(layer[get(thumbname)].height, thumbheight);
				mul(thumbx, i, thumbxoffset);
				add(thumbx, thumbpadding);
				copy(layer[get(thumbname)].x, thumbx);
				copy(layer[get(thumbname)].y, thumbpadding);
				add(scene[get(i)].thumbx, thumbx, thumbxcenter);
				copy(scene[get(i)].thumby, thumbpadding);
				set(layer[get(thumbname)].linkedscene, get(scene[get(i)].name) );
				set(layer[get(thumbname)].onclick, if(islittlecomplate,copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); ););
				if(skin_settings.tooltips_thumbs,
					set(layer[get(thumbname)].tooltip, get(scene[get(i)].title) );
					layer[get(thumbname)].loadstyle(skin_tooltips);
				  );
				if(skin_settings.thumbs_text,
					txtadd(thumbtext, 'skin_thumbtext_', get(i));
					addlayer(get(thumbtext));
					layer[get(thumbtext)].loadstyle(skin_thumbtext_style);
					set(layer[get(thumbtext)].keep, true);
					set(layer[get(thumbtext)].parent, get(thumbname));
					set(layer[get(thumbtext)].html, get(scene[get(i)].title));
				  );
			   );

			if(thumb_cnt == 1,
				set(layer[skin_thumbs].align, 'lefttop');
			  );
		  );
	</action>

	<action name="skin_setup_littleplanetintro">
		set(islittlecomplate,false);
		copy(lp_scene, xml.scene);
		copy(lp_hlookat, view.hlookat);
		copy(lp_vlookat, view.vlookat);
		copy(lp_fov, view.fov);
		copy(lp_fovmax, view.fovmax);
		copy(lp_limitview, view.limitview);
		set(view.fovmax, 170);
		set(view.limitview, lookto);
		set(view.vlookatmin, 90);
		set(view.vlookatmax, 90);
		lookat(calc(lp_hlookat - 180), 90, 150, 1, 0, 0);
		set(layer[skin_btn_vr].onclick,"");
		set(events[lp_events].onloadcomplete,
			setFrame();
			delayedcall(0.5,
				if(lp_scene === xml.scene,
					set(control.usercontrol, off);
					copy(view.limitview, lp_limitview);
					set(view.vlookatmin, null);
					set(view.vlookatmax, null);
					tween(view.hlookat|view.vlookat|view.fov|view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0),
						3.0, easeOutQuad,
						set(islittlecomplate,true);
						set(control.usercontrol, all);
						tween(view.fovmax, get(lp_fovmax));
						set(layer[skin_btn_vr].onclick,webvr.enterVR(););
						delayedcall(2, set(auto_status,1);startAutoRatote(); );
						);
				  );
			  );
		  );
	</action>


	<action name="skin_onresize">
		mul(mh, area.pixelheight, -1);
		if(layer[skin_thumbs].state == 'opened', add(mh,layer[skin_thumbs].height); );
		if(layer[skin_map].state    == 'opened', sub(hh,area.pixelheight,skin_settings.controlbar_offset); sub(hh,layer[skin_control_bar].height); sub(hh,32); add(mh,hh); add(mh,skin_settings.controlbar_overlap); sub(mh, layer[skin_scroll_layer].y_offset); copy(layer[skin_map].height, hh); );
		add(mh, layer[skin_scroll_layer].y_offset);
		set(layer[skin_scroll_layer].y, get(mh));
		skin_arrange_buttons();
	</action>


	<!-- determine the visibility of the buttons and calculate their positions -->
	<action name="skin_arrange_buttons">
		calc(show_selbuttons, scene.count GT 1);
		calc(show_thumbutton, skin_settings.thumbs == true);
		calc(show_mapbutton,  skin_settings.maps == true);
		calc(show_gyrobutton, plugin[skin_gyro].available == true AND custom_set.vrShow == true );
		calc(show_vrbutton,   webvr.isavailable == true AND custom_set.vrShow == true);
		calc(show_fsbutton,   device.fullscreensupport == true);
		
		set(lpos,6);
		set(cpos,0);
		if(show_gyrobutton, dec(cpos,20));
		if(show_vrbutton, dec(cpos,24));
		set(rpos,6);

		copy(layer[skin_btn_navi].visible, show_dirbuttons);

		copy(layer[skin_btn_prev].visible, show_selbuttons);
		copy(layer[skin_btn_next].visible, show_selbuttons);
		if(show_selbuttons, inc(lpos,44); inc(rpos,44); );

		copy(layer[skin_btn_thumbs].visible, show_thumbutton);
		copy(layer[skin_btn_thumbs].x, lpos);
		if(show_thumbutton, inc(lpos,40));

		copy(layer[skin_btn_map].visible, show_mapbutton);
		copy(layer[skin_btn_map].x, lpos);
		if(show_mapbutton, inc(lpos,40));
	
		copy(layer[skin_btn_navi].x, cpos);
		copy(layer[gyroBtn].visible, show_gyrobutton);
		copy(layer[skin_btn_vr].visible, show_vrbutton);
		copy(layer[skin_btn_hide].x, rpos);
		
		setFrame();

	</action>


	<action name="skin_updatescroll">
		if(layer[skin_thumbs].loaded,
			set(cursceneindex, 0);
			if(xml.scene, copy(cursceneindex, scene[get(xml.scene)].index));
			layer[skin_thumbs].setcenter(get(scene[get(cursceneindex)].thumbx), get(scene[get(cursceneindex)].thumby));
		  );
	</action>


	<action name="skin_updatethumbscroll">
		copy(padding,skin_settings.thumbs_padding);

		if(skin_settings.thumbs_scrollbuttons,
			if(loverflow GT 0, set(layer[skin_thumbs_scrollleft].visible,true),  set(layer[skin_thumbs_scrollleft].visible,false) );
			if(roverflow GT 0, set(layer[skin_thumbs_scrollright].visible,true), set(layer[skin_thumbs_scrollright].visible,false) );
		  );

		if(skin_settings.thumbs_scrollindicator,
			if(woverflow GT 0,
				set(layer[skin_thumbs_scrollindicator].visible,true);
				sub(iw,pixelwidth,woverflow);
				div(pw,iw,pixelwidth);
				div(px,loverflow,woverflow);
				mul(pw,iw);
				copy(layer[skin_thumbs_scrollindicator].width,pw);
				sub(iw,pw);
				sub(iw,padding);
				sub(iw,padding);
				mul(px,iw);
				add(px,padding);
				copy(layer[skin_thumbs_scrollindicator].x,px);
			  ,
				set(layer[skin_thumbs_scrollindicator].visible,false);
			  );
		  );
	</action>


	<action name="skin_update_scene_infos">
		if(xml.scene !== null AND scene[get(xml.scene)].index GE 0,

			if(skin_settings.title,
				if(title, txtadd(layer[skin_title].html, get(title), ' - ', get(scene[get(xml.scene)].title) ); , copy(layer[skin_title].html, scene[get(xml.scene)].title ); );
				delayedcall(0.1, set(layer[skin_title].visible,true) );
			  );

			if(skin_settings.thumbs_loop == false,
				if(scene[get(xml.scene)].index GT 0,
					set(layer[skin_btn_prev].enabled, true);
					set(layer[skin_btn_prev].alpha, 1.0);
				  ,
					set(layer[skin_btn_prev].enabled, false);
					set(layer[skin_btn_prev].alpha, 0.3);
				  );

				sub(lastsceneindex, scene.count, 1);
				if(scene[get(xml.scene)].index LT lastsceneindex,
					set(layer[skin_btn_next].enabled, true);
					set(layer[skin_btn_next].alpha, 1.0);
				  ,
					set(layer[skin_btn_next].enabled, false);
					set(layer[skin_btn_next].alpha, 0.3);
				  );
			  ,
				if(scene.count GT 1,
					set(layer[skin_btn_prev].enabled, true);
					set(layer[skin_btn_prev].alpha, 1.0);
					set(layer[skin_btn_next].enabled, true);
					set(layer[skin_btn_next].alpha, 1.0);
				  ,
					set(layer[skin_btn_prev].enabled, false);
					set(layer[skin_btn_prev].alpha, 0.3);
					set(layer[skin_btn_next].enabled, false);
					set(layer[skin_btn_next].alpha, 0.3);
				  );
			  );

			if(scene.count GT 1,
				set(layer[skin_btn_prev_fs].visible, true);
				set(layer[skin_btn_next_fs].visible, true);
			  ,
				set(layer[skin_btn_prev_fs].visible, false);
				set(layer[skin_btn_next_fs].visible, false);
			  );

			txtadd(parentname, 'skin_thumb_', get(scene[get(xml.scene)].index));
			if(layer[get(parentname)],
				set(layer[skin_thumbborder].parent, get(parentname));
				set(layer[skin_thumbborder].visible, true);
			  ,
				set(layer[skin_thumbborder].visible, false);
			  );

			if(scene[get(xml.scene)].mapspotname,
				layer[skin_map].activatespot(get(scene[get(xml.scene)].mapspotname));
				layer[skin_map].pantospot(get(scene[get(xml.scene)].mapspotname));
			  );

			if(plugin[skin_gyro].isavailable == true AND view.vlookatrange == 180,
				set(layer[gyroBtn].visible, true);setLeftBottom();
			  ,
				set(layer[gyroBtn].visible, false);setLeftBottom();
			  );

			if(view.vlookatrange LT 180,
				if(backup_control_bouncinglimits === null,
					copy(backup_control_bouncinglimits, control.bouncinglimits);
				  );
				set(control.bouncinglimits, false);
			  ,
				if(backup_control_bouncinglimits !== null,
					copy(control.bouncinglimits, backup_control_bouncinglimits);
				  );
			  );
		  );
	</action>


	<action name="skin_gotoscene">
		if(scene[%1],
			copy(cursceneindex, scene[get(xml.scene)].index);
			copy(newsceneindex, scene[%1].index);
			txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
			layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
			loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(newsceneindex LT cursceneindex ? skin_settings.loadscene_blend_prev : (newsceneindex GT cursceneindex ? skin_settings.loadscene_blend_next : skin_settings.loadscene_blend)));
		  );
	</action>


	<action name="skin_nextscene">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		if(newsceneindex GE 0 AND newsceneindex LT scene.count,
			txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
			layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
			loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ? skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
		  );
	</action>


	<action name="skin_nextscene_loop">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		sub(lastsceneindex, scene.count, 1);
		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
		loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ? skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
	</action>


	<action name="skin_showloading">
		if(display.stereo == true,
			set(layer[skin_loadingtext].visible, false);
		  ,
			set(layer[skin_loadingtext].visible, %1);
		  );
	</action>


	<action name="skin_hidetooltips">
		set(layer[skin_tooltip].alpha,0.0);
		set(layer[skin_tooltip].visible,false);
	</action>


	<action name="skin_buttonglow">
		if('%1' !== 'null',
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default,
				set(layer[skin_buttonglow].parent, null);
				set(layer[skin_buttonglow].visible, false);
			  );
		  );
	</action>


	<action name="skin_calc_opened_closed">
		if(layer[get(name)].y_closed === null,
			set(layer[get(name)].y_opened, get(layer[get(name)].y));
			set(layer[get(name)].y_closed, calc(layer[get(name)].y - skin_settings.controlbar_offset - skin_settings.controlbar_height + skin_settings.controlbar_offset_closed));
		  );
	</action>


	<action name="skin_hideskin">
		callwith(layer[skin_scroll_window],   skin_calc_opened_closed() );
		callwith(layer[skin_splitter_bottom], skin_calc_opened_closed() );
		callwith(layer[skin_control_bar],     skin_calc_opened_closed() );
		
		if(layer[skin_map].state    != 'closed', skin_showmap(false);    wait(0.40); );
		if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); wait(0.25); );

		set(hidetime, calc('%1' == 'instant' ? 0.0 : 0.5));
		tween(layer[skin_scroll_window].y,   get(layer[skin_scroll_window  ].y_closed), get(hidetime));
		tween(layer[skin_splitter_bottom].y, get(layer[skin_splitter_bottom].y_closed), get(hidetime));
		tween(layer[skin_control_bar].y,     get(layer[skin_control_bar    ].y_closed), get(hidetime));

		tween(layer[skin_btn_prev_fs].x, 0, get(hidetime));
		tween(layer[skin_btn_next_fs].x, 0, get(hidetime));

		if(layer[skin_logo], tween(layer[skin_logo].alpha, 0.0, 0.5, default, set(layer[skin_logo].visible,false)); );

		stopdelayedcall(skin_btn_show_alpha);
		set(layer[skin_btn_show].visible, true);
		delayedcall(skin_btn_show_alpha, get(hidetime), tween(layer[skin_btn_show].alpha, 0.25, 0.25); );
	</action>


	<action name="skin_showskin">
		tween(layer[skin_scroll_window  ].y, get(layer[skin_scroll_window  ].y_opened));
		tween(layer[skin_splitter_bottom].y, get(layer[skin_splitter_bottom].y_opened));
		tween(layer[skin_control_bar    ].y, get(layer[skin_control_bar    ].y_opened));

		tween(layer[skin_btn_prev_fs].x, -50);
		tween(layer[skin_btn_next_fs].x, -50);

		if(layer[skin_logo], set(layer[skin_logo].visible,true); tween(layer[skin_logo].alpha, 1.0); );

		stopdelayedcall(skin_btn_show_alpha);
		set(layer[skin_btn_show].visible, false);
		delayedcall(skin_btn_show_alpha, 0.25, tween(layer[skin_btn_show].alpha, 0.0, 0.0); );
	</action>


	<action name="skin_showthumbs">
		if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(show,
			set(layer[skin_thumbs].state, 'opened');
			tween(layer[skin_thumbs].alpha, 1.0, 0.25);
			add(mh, layer[skin_thumbs].height);
			add(mh, layer[skin_scroll_layer].y_offset);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
			set(layer[skin_thumbs_container].visible, true);
			tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
			tween(layer[skin_map].alpha, 0.0, 0.25, default, set(layer[skin_map].visible,false));
		  ,
			set(layer[skin_thumbs].state, 'closed');
			tween(layer[skin_thumbs].alpha, 0.0, 0.25, easeOutQuint);
			add(mh, layer[skin_scroll_layer].y_offset);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););
		  );
	</action>


	<action name="skin_showmap">
		if(%1 == null, if(layer[skin_map].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(show,
			tween(layer[skin_thumbs_container].alpha, 0.0, 0.25, default, set(layer[skin_thumbs_container].visible,false));
			set(layer[skin_map].visible, true);
			tween(layer[skin_map].alpha, 1.0, 0.25);
			set(layer[skin_map].state, 'opened');
			sub(hh,area.pixelheight,skin_settings.controlbar_offset);
			sub(hh,layer[skin_control_bar].height);
			sub(hh,32);
			add(mh,hh);
			sub(hh,skin_settings.controlbar_overlap);
			copy(layer[skin_map].height, hh);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
		  ,
		  	if(layer[skin_map].state != 'closed',
				set(layer[skin_map].state, 'closed');
				add(mh, layer[skin_scroll_layer].y_offset);
				tween(layer[skin_map].alpha, 0.0, 0.5, easeOutQuint);
				tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_map].visible,false) );
			  );
		  );
	</action>


	<action name="skin_keydown_event">
		if(keycode == 33, skin_nextscene_loop(-1) );            	<!-- Page Up   - previous scene -->
		if(keycode == 34, skin_nextscene_loop(+1) );            	<!-- Page Dowm - next scene -->
		if(keycode == 35, skin_gotoscene(calc(scene.count-1)) );	<!-- End       - last scene -->
		if(keycode == 36, skin_gotoscene(0) );                  	<!-- Home/Pos1 - first scene -->
	</action>


	<action name="skin_deeplinking_update_url">
		if(skin_settings.deeplinking AND (!webvr OR webvr.isenabled === false),
			delayedcall(skin_deeplinking_update, calc(%1 == null ? 0.1 : %1), skin_deeplinking_update_url_process() );
		  );
	</action>
	
	<action name="skin_deeplinking_update_url_process">
		copy(adr, browser.location);
		indexoftxt(qi, get(adr), '?');
		if(qi GT 0, subtxt(adr, adr, 0, get(qi)));
		copy(si, scene[get(xml.scene)].index);
		copy(h, view.hlookat);
		copy(v, view.vlookat);
		copy(f, view.fov);
		copy(d, view.distortion);
		copy(a, view.architectural);
		clamp(d, 0.0, 1.0);
		clamp(a, 0.0, 1.0);
		set(pp, calc(f LT 10 ? 6 : 2));
		roundval(h, get(pp));
		roundval(v, get(pp));
		roundval(f, get(pp));
		roundval(d, 2);
		roundval(a, 1);
		set(adr, calc(adr + '?startscene=' + si + '&amp;startactions=lookat('+h+','+v+','+f+','+d+','+a+');'));
		js( history.replaceState(null, document.title, get(adr)); );
	</action>


	<!-- reload the scene when there is a special image for VR -->
	<action name="skin_reloadscene_webvr">
		delayedcall(0.1,
			if(scene[get(xml.scene)].havevrimage,
				loadscene(get(xml.scene), null, MERGE|KEEPVIEW|KEEPMOVING|KEEPHOTSPOTS|NOPREVIEW, BLEND(0.5));
			  );
		  );
	</action>


	<!-- context menu - http://krpano.com/docu/xml/#contextmenu -->
	<contextmenu>
		<item name="fm" caption="农场帮手"   onclick="openurl('http://farmeasy.cn',_blank);"  />
		<item name="fs" caption="全屏" separator="true"/>
		<item name="nv" caption="标准视图"        onclick="skin_view_normal();"        showif="view.vlookatrange == 180" separator="true"      />
		<item name="fv" caption="鱼眼视图"        onclick="skin_view_fisheye();"       showif="view.vlookatrange == 180" devices="flash|webgl" />
		<item name="sv" caption="立体视图"        onclick="skin_view_stereographic();" showif="view.vlookatrange == 180" devices="flash|webgl" />
		<item name="lp" caption="小星球视图"      onclick="skin_view_littleplanet();"  showif="view.vlookatrange == 180" devices="flash|webgl" />
	</contextmenu>

	<action name="skin_view_look_straight">
		if(view.vlookat LT -80 OR view.vlookat GT +80,
			tween(view.vlookat, 0.0, 1.0, easeInOutSine);
			tween(view.fov,     100, distance(150,0.8));
		  );
		skin_deeplinking_update_url(1.0);
	</action>

	<action name="skin_view_normal">
		skin_view_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    0.0, distance(1.0,0.5));
	</action>

	<action name="skin_view_fisheye">
		skin_view_look_straight();
		tween(view.architectural, 0.0,  distance(1.0,0.5));
		tween(view.pannini,       0.0,  distance(1.0,0.5));
		tween(view.distortion,    0.35, distance(1.0,0.5));
	</action>


	<action name="skin_view_stereographic">
		skin_view_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    1.0, distance(1.0,0.8));
	</action>

	<action name="skin_view_littleplanet">
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    1.0, distance(1.0,0.8));
		tween(view.fov,           150, distance(150,0.8));
		tween(view.vlookat,        90, distance(100,0.8));
		add(new_hlookat, view.hlookat, 123.0);
		tween(view.hlookat, get(new_hlookat), distance(100,0.8));
		skin_deeplinking_update_url(1.0);
	</action>

	<style name="control_style" url="%SWFPATH%/skin/panorama_icon.png"/>
	<!--左上角-->
	<layer name="custom_logo"  keep="true" align="lefttop" visible="get:custom_set.logoShow"  height="60" autowidth="true" maskchildren="true" style="control_style" url="get:custom_set.logoUrl" onclick="">
		</layer>
	<!-- 左上角结束-->
	<!--左下角-->
	<layer name="choseList"  keep="true"  align="leftbottom" visible="get:custom_set.viewShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="5" y="5" >
		<layer name="choseList2"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|0|52|52" ondown="skin_showthumbs()">
		</layer>
		<layer name="choseListtext" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="场景选择"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>

	<layer name="card_layer"  keep="true"  align="leftbottom" visible="get:custom_set.cardShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="55" y="5" >
		<layer name="card_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="79|350|52|52" ondown="js(showCard());">
		</layer>
		<layer name="card_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="企业名片"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>

	<layer name="info_layer"  keep="true"  align="leftbottom" visible="false" width="50" scale="1" height="60" scalechildren="true" type="container" x="55" y="5" >
		<layer name="info_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|69|52|52" ondown="showInfo();">
		</layer>
		<layer name="info_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="场景介绍"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>

	<layer name="navigation_layer"  keep="true"  align="leftbottom" visible="false" width="50" scale="1" height="60" scalechildren="true" type="container" x="55" y="5" >
		<layer name="navigation_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|140|52|52" ondown="showPlace();">
		</layer>
		<layer name="navigation_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="导航"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>

	<layer name="rotate_layer"  keep="true"  align="leftbottom" visible="get:custom_set.autoShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="105" y="5" >
		<layer name="rotate_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|489|50|52" ondown="rotateLayerClick();">
		</layer>
		<layer name="rotate_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="自动旋转"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>

	<layer name="gyroBtn"  keep="true"  align="leftbottom" visible="get:custom_set.gyroShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="55" y="5" >
		<layer name="gyroImg"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"  visible="true"  style="control_style" crop="79|559|52|52"  onclick="switch(plugin[skin_gyro].enabled); switch(crop, 79|559|52|52, 0|559|52|52);"  devices="html5" >
		</layer>
		<layer name="gyroTxt" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="陀螺仪"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>
	<!-- 左下角结束-->
	<!-- 右下角-->
	<layer name="micro_shop_layer"  keep="true"  align="rightbottom" visible="get:custom_set.microShopShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="150" y="5" >
		<layer name="micro_shop_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|209|52|52"  link="get:custom.microShopUrl"  onclick="openurl(get(custom_set.microShopUrl),_blank)">
		</layer>
		<layer name="micro_shop_txt" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="微商城"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>


	<layer name="join_layer"  keep="true"  align="rightbottom" visible="false" width="50" scale="1" height="60" scalechildren="true" type="container" x="100" y="5" >
		<layer name="join_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|280|52|52" onclick="js(openJoinFarm())" >
		</layer>
		<layer name="join_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="领取优惠"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>


	<layer name="comment_layer"  keep="true"  align="rightbottom" visible="get:custom_set.viewShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="50" y="5" >
		<layer name="comment_btn"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|629|52|52" onclick="showComment();displayAll(true);">
		</layer>
		<layer name="comment_img" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="评论"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>


	<layer name="skin_btn_hp_button"  keep="true"  align="rightbottom" visible="get:custom_set.viewShow" width="50" scale="1" height="60" scalechildren="true" type="container" x="0" y="5" >
		<layer name="skin_btn_hp_img"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="0|420|52|52" onclick="js(addGood_before(get(scene[get(xml.scene)].scene_id)))">
		</layer>
		<layer name="skin_btn_hp_text" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="100"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>
	
	<layer name="share_button"  keep="true"  align="rightbottom" visible="false" width="50" scale="1" height="60" scalechildren="true" type="container" x="0" y="5" >
		<layer name="share_img"  keep="true" align="top"  capture="true" accuracy="1"  scale="0.6"    style="control_style" crop="78|419|52|52" onclick="js(showShare())">
		</layer>
		<layer name="share_text" url="%SWFPATH%/plugins/textfield.swf" align="top" keep="true" y="35" html="分享"  visible="true" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-size:12px;text-align:center'"  />
	</layer>
	<!-- 右下角结束-->

	<!-- 右上角-->
	<layer name="viewcounttext" url="%SWFPATH%/plugins/textfield.swf" align="righttop"  y="20" x="15" visible="get:custom_set.viewShow" height="22" keep="true" autowidth="true" background="true" 
	 backgroundcolor="0x919EA8"   backgroundalpha="0.3"  roundedge="15 15 15 15"	vcenter="true"		maskchildren="true"   html=""
	  css="color:#FFFFFF; font-family:Arial; font-size:12px;" padding="0 12 0 12">
		
	</layer>
	
	<layer name="moreset"  keep="true" align="righttop" visible="false" capture="true" accuracy="1"  scale="0.7"  x="10" y="60" style="control_style" crop="76|0|52|52" ondown="moreSetShow();">
		</layer>

	<layer name="music_btn"  keep="true" align="righttop" visible="get:custom_set.bgmShow" capture="true" accuracy="1"  scale="0.7"  x="10" y="60" style="control_style" crop="76|70|52|52" onclick="playMusic();switch(crop, 76|70|52|52, 76|140|52|52);">
		</layer>

	<!-- webvr -->
	<layer name="vebvrlayer"  if="custom_set.wx === false " keep="true"  align="righttop" visible="get:custom_set.vrShow" capture="true" accuracy="1"     x="10" y="110" height="60" scalechildren="true" type="container" >
		<layer name="skin_btn_vr" onclick="webvr.enterVR();" keep="true" align="righttop" visible="false" capture="true" accuracy="1" scale="0.7"   style="control_style" crop="76|210|52|52">
		</layer>
	</layer>
	
	<layer name="vebvrlayer2"  if="custom_set.wx === true" keep="true"  align="righttop" visible="get:custom_set.vrShow" capture="true" accuracy="1"     x="10" y="110" height="60" scalechildren="true" type="container" >
		<layer name="skin_btn_vr2" onclick="openWxTip();" keep="true" align="righttop" visible="true" capture="true" accuracy="1" scale="0.7"   style="control_style" crop="76|210|52|52">
		</layer>
	</layer>			
	<!-- 关注 -->
	<layer name="jiaruwomen" keep="true" align="righttop" visible="get:custom_set.markShow" capture="true" accuracy="1"  scale="0.7"   x="10" y="160" style="control_style" crop="76|280|52|52"  onclick="js(openMark())">
		</layer>
	<!-- 全屏 -->
	<layer name="fullscreen_btn"  keep="true" align="righttop" visible="true" capture="true" accuracy="1"  scale="0.7"  x="10" y="180" style="control_style" crop="0|693|51|51" onclick="switch(fullscreen);enterFullScreen();" devices="fullscreensupport">
	</layer>
	<!-- 右上角结束-->
	
	<!--音乐-->
	<plugin name="soundinterface" url.flash="%SWFPATH%/plugins/soundinterface.swf"  url.html5="%SWFPATH%/plugins/soundinterface.js"  rootpath=""   preload="true"  keep="true"  />
	
	<!--地面遮罩 -->
	<hotspot name="nadirlogo" keep="true" visible="get:custom_set.coverGround" style="control_style"  url="%SWFPATH%/skin/cover.png" ath="0"  atv="90"  enabled="false" distorted="true"  scale="1.0"  rotate="0.0" />
	<events name="nadirlogo" keep="true" onviewchange="copy(hotspot[nadirlogo].rotate, view.hlookat);" />

	<!--天空遮罩 -->
	<hotspot name="nadirlogo_top" keep="true" visible="get:custom_set.coverSky" style="control_style"  url="%SWFPATH%/skin/cover.png"  ath="0"  atv="-90" enabled="false"  distorted="true"  scale="1.0"  rotate="0.0"  />
	<events name="nadirlogo_top" keep="true" onviewchange="copy(hotspot[nadirlogo_top].rotate, view.hlookat);" />
	<area mode="border" left="0" top="0" right="0" bottom="0" />  
	<autorotate enabled="false" waittime="5.0"  speed="3.0"  horizon="0.0"  tofov="120.0"  />
	<action name="setRightTop" >
		set(right_top_y,60);
		if(layer[moreset].visible,
			set(layer[moreset].y,get(right_top_y));
			inc(right_top_y,50);
		);
		if(layer[music_btn].visible,
			set(layer[music_btn].y,get(right_top_y));
			inc(right_top_y,50);
		);
		
		if(layer[vebvrlayer].visible == true AND layer[skin_btn_vr].visible == true,
			set(layer[vebvrlayer].y,get(right_top_y));
			inc(right_top_y,50);
		);
		
		if(layer[vebvrlayer2].visible == true,
			set(layer[vebvrlayer2].y,get(right_top_y));
			inc(right_top_y,50);
		);
		if(layer[jiaruwomen].visible,
			set(layer[jiaruwomen].y,get(right_top_y));
			inc(right_top_y,50);
		);
		if(layer[fullscreen_btn].visible,
			set(layer[fullscreen_btn].y,get(right_top_y));
			inc(right_top_y,50);
		);
	</action>
	
	<action name="setRightBottom" >

		set(right_bottom_x,0);
		if(!device.mobile AND area.pixelwidth GT 600 AND custom_set.viewShow == true,
			set(layer[share_button].isv,true);
			set(layer[share_button].visible,get(layer[fullscreen_btn].isv));			
			set(layer[share_button].x,get(right_bottom_x));
			inc(right_bottom_x,50);
			set(layer[skin_btn_hp_button].x,get(right_bottom_x));
		);
		if(layer[skin_btn_hp_button].visible,
			set(layer[skin_btn_hp_button].x,get(right_bottom_x));
			inc(right_bottom_x,50);
		);
		if(layer[comment_layer].visible,
			set(layer[comment_layer].x,get(right_bottom_x));
			inc(right_bottom_x,50);
		);
		if(layer[join_layer].visible,
			set(layer[join_layer].x,get(right_bottom_x));
			inc(right_bottom_x,50);
		);
		if(layer[micro_shop_layer].visible,
			set(layer[micro_shop_layer].x,get(right_bottom_x));
			inc(right_bottom_x,50);
		);
	</action>
	
	<action name="setLeftBottom" >
		set(left_bottom_x,5);
		if(layer[choseList].visible,
			set(layer[choseList].x,get(left_bottom_x));
			inc(left_bottom_x,50);
		);
		if(!device.mobile AND area.pixelwidth GT 700,
			if(layer[card_layer].visible,
				set(layer[card_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
			);
			if(scene[get(xml.scene)].info_show == "1",
				set(layer[info_layer].visible,true);
				set(layer[info_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
				,
				set(layer[info_layer].visible,false);
			);
			if(layer[navigation_layer].visible,
				set(layer[navigation_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
			);
			if(layer[rotate_layer].visible,
				set(layer[rotate_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
				js(setRotateShow_Postion(1));
			);
			if(layer[gyroBtn].visible,
				set(layer[gyroBtn].x,get(left_bottom_x));
				inc(left_bottom_x,50);
			);
		,
			if(scene[get(xml.scene)].info_show == "1",
				set(layer[info_layer].visible,true);
				set(layer[info_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
				,
				set(layer[info_layer].visible,false);
			);
			if(layer[navigation_layer].visible,
				set(layer[navigation_layer].x,get(left_bottom_x));
				inc(left_bottom_x,50);
			);
			
			if(layer[card_layer].visible,
				set(card_layer_show,1);
				set(layer[card_layer].visible,false);
				js(setCardShow());
			);
			if(layer[rotate_layer].visible,
				set(rotate_layer,1);
				set(layer[rotate_layer].visible,false);
				js(setRotateShow());
				js(setRotateShow_Postion(1));
			);
			if(layer[gyroBtn].visible,
				set(gyro_btn,1);
				set(layer[gyroBtn].visible,false);
				js(setGyroShow());
				if(layer[rotate_layer].visible,
				
				,
					
				)
				
			);
			if(card_layer_show == 1 OR rotate_layer == 1 OR gyro_btn == 1,
				set(layer[moreset].visible,true);
			);
		);
		
	</action>
	<action name="setFrame">
		setLeftBottom();
		setRightTop();
		setRightBottom();
	</action>
	<action name="playMusic">
		if(custom_set.bgmShowed == true,
			set(custom_set.bgmShowed,false);
			stopsound(bgsnd);
			,
			playsound(bgsnd, get(custom_set.bgmUrl), 0);
			set(custom_set.bgmShowed,true);
		)
	</action>
	<action name="startAutoRatote">
	if(plugin[skin_gyro].enabled != true AND auto_status == '1' AND custom_set.autoShow == true,
      set(autorotate.accel,10);
      set(autorotate.waittime,3.0);
      set(autorotate.speed,2.0);
      set(autorotate.horizon,0.0);
      set(auto_rotate_old,get(view.hlookat));
      set(autorotate.waittime,0.0);
      set(autorotate.horizon,get(view.vlookat));
      set(autorotate.enabled,true);
      delayedcall(autoplayId,180,nextScene(););
    );
	</action>
	<action name="nextScene">
		if(scene.count GT 1 ,
	      for(set(i,0), i LT scene.count, inc(i),
	        if(scene[get(i)].name == xml.scene,
	          set(nexti,get(i));
	          add(nexti,1);
	          if(nexti == scene.count,
	            set(nexti,0);
	          );
	        );
	      );
	      set(next_scene,get(scene[get(nexti)].name));
	      loadscene(get(next_scene),null,KEEPVIEW|MERGE,OPENBLEND(0.5, 0.0, 0.75, 0.0, linear));
	    );
	</action>
	<action name="stopRatote">
	 set(auto_status,0);
	 set(autorotate.enabled,false);
     stopdelayedcall(autoplayId);
	</action>
	
	<action name="stopRatoteTwo">
	 set(autorotate.enabled,false);
     stopdelayedcall(autoplayId);
	</action>
	
	<action name="idleAction">
		if(custom_set.autoShow == true AND auto_status == '1' AND autorotate.enabled == false,startAutoRatote(););
	</action>
	
	<action name="rotateLayerClick">
		if(layer[rotate_btn].crop == '0|489|50|52',
			set(layer[rotate_btn].crop , '79|489|52|52');
			set(autorotate.enabled,false);
			stopRatote();
			set(auto_status,0);
		,
			set(layer[rotate_btn].crop , '0|489|50|52');
			set(autorotate.enabled,true);
			startAutoRatote();
			set(auto_status,1);
		);
	</action>
	
	<action name="showInfo">
		set(kgid,get(scene[get(xml.scene)].scene_id));
		js( showSceneInfo( get(kgid) ) );
		stopRatote();
	</action>
	
	<action name="showPlace">
		set(baseId,get(scene[get(xml.scene)].base_id));
		set(lat,get(scene[get(xml.scene)].lat));
		set(lng,get(scene[get(xml.scene)].lng));
		js(openMap(get(baseId),get(lat),get(lng)););
		stopRatote();
	</action>
	
	<action name="enableGyro">
	if('%1' == 'false',
		set(plugin[skin_gyro].enabled,false);
		set(layer[gyroImg].crop, '79|559|52|52');
		js(setGyroShow_Postion(0));
		startAutoRatote();
	,
		set(plugin[skin_gyro].enabled,true);
		set(layer[gyroImg].crop, '0|559|52|52');
		js(setGyroShow_Postion(1));
		stopRatoteTwo();
	);
	</action>
	
	<action name="moreSetShow">
		stopRatote();
		js(moreSetShow());
	</action>
	
	<action name="openWxTip">
		
		js(showWxTips());
	</action>
</krpano>
